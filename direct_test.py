import requests
import configparser

def get_user_tasks_simple(user_id, session, account_url):
    """–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–∏"""
    print(f"üîç –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID={user_id}...")
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á–∏ –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å
    payload = {
        "offset": 0,
        "pageSize": 100,
        "filters": [
            {
                "type": 2,
                "operator": "equal",
                "value": f"user:{user_id}"
            }
        ],
        "fields": "id,name,status,overdue"
    }
    
    try:
        response = session.post(f"{account_url}/task/list", json=payload, timeout=30)
        
        if response.status_code == 200:
            data = response.json()
            if data.get('result') == 'fail':
                print(f"   ‚ùå API –æ—à–∏–±–∫–∞: {data.get('error')}")
                return 0, 0
            
            all_tasks = data.get('tasks', [])
            print(f"   üìã –í—Å–µ–≥–æ –∑–∞–¥–∞—á –∫–∞–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {len(all_tasks)}")
            
            if not all_tasks:
                return 0, 0
            
            # –°—á–∏—Ç–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏ (–ù–ï "–í—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è" –∏ –ù–ï "–ó–∞–≤–µ—Ä—à–µ–Ω–Ω–∞—è")
            active_tasks = []
            for task in all_tasks:
                status = task.get('status', {})
                status_name = status.get('name', '') if isinstance(status, dict) else str(status)
                
                print(f"   - {task.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}: {status_name}")
                
                # –ü—Ä–æ—Å—Ç–æ–µ —É—Å–ª–æ–≤–∏–µ: –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –ù–ï —Å–æ–¥–µ—Ä–∂–∏—Ç "–í—ã–ø–æ–ª–Ω–µ–Ω" –∏–ª–∏ "–ó–∞–≤–µ—Ä—à–µ–Ω"
                if status_name not in ['–í—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è', '–ó–∞–≤–µ—Ä—à–µ–Ω–Ω–∞—è']:
                    active_tasks.append(task)
            
            # –°—á–∏—Ç–∞–µ–º –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö
            overdue_count = sum(1 for task in active_tasks if task.get('overdue', False))
            
            print(f"   ‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö: {len(active_tasks)}, –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö: {overdue_count}")
            return len(active_tasks), overdue_count
        else:
            print(f"   ‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return 0, 0
            
    except Exception as e:
        print(f"   ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return 0, 0

def main():
    print("üîß –ü–†–Ø–ú–û–ô –¢–ï–°–¢ –ë–ï–ó –°–õ–û–ñ–ù–û–ô –õ–û–ì–ò–ö–ò")
    print("="*50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
    config = configparser.ConfigParser()
    config.read('admin_config.ini', encoding='utf-8')
    api_token = config['Planfix']['api_token']
    account_url = config['Planfix']['account_url']
    
    session = requests.Session()
    session.headers.update({
        'Content-Type': 'application/json',
        'Authorization': f'Bearer {api_token}'
    })
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    users = [
        {'id': 1, 'name': '–†–æ–∑—É–º –ê–Ω–¥—Ä–µ–π'},
        {'id': 3, 'name': '–ó–∞–π—Ü–µ–≤–∞ –°–≤–µ—Ç–ª–∞–Ω–∞'},
        {'id': 4, 'name': '–ü–∞–≤–ª–æ–≤–∞ –ê–ª—ë–Ω–∞'},
        {'id': 5, 'name': '–î–æ–≤–≥–∞–ª—å –ò–≥–æ—Ä—å'},
        {'id': 6, 'name': '–ü—É—Å—Ç–æ–≤–∏—Ç –ê–Ω–Ω–∞'}
    ]
    
    print(f"\n{'ID':<4} {'–ò–ú–Ø':<20} {'–ê–ö–¢–ò–í–ù–´–•':<10} {'–ü–†–û–°–†–û–ß':<10}")
    print("-" * 50)
    
    for user in users:
        active_count, overdue_count = get_user_tasks_simple(user['id'], session, account_url)
        print(f"{user['id']:<4} {user['name']:<20} {active_count:<10} {overdue_count:<10}")
        print()

if __name__ == "__main__":
    main()
